# --- Defaults ---
# --- pymarl options ---
runner: "parallel" # Runs 1 env for an episode
mac: "basic_mac" # Basic controller
env: "sc2" # Environment name
env_args: {} # Arguments for the environment
batch_size_run: 1 # Number of environments to run in parallel
test_nepisode: 128 # 32 # Number of episodes to test for
test_interval: 50000 # 100000 # Test after {} timesteps have passed
test_greedy: True # Use greedy evaluation (if False, will set epsilon floor to 0
test_verbose: False # Print out evaluation results
log_interval: 50000 # 100000 # Log summary of stats after every {} timesteps
runner_log_interval: 50000 # 100000 # Log runner stats (not test stats) every {} timesteps
learner_log_interval: 50000 # 100000 # Log training stats every {} timesteps
t_max: 10000050 # Stop running after this many timesteps
use_cuda: True # Use gpu by default unless it isn't available
buffer_cpu_only: True # If true we won't keep all of the replay buffer in vram

# --- Logging options ---
use_tensorboard: True # Log results to tensorboard
save_model: True # Save the models to disk
save_model_interval: 1000000 # Save models after this many timesteps
checkpoint_path: "" # Load a checkpoint from this path
eval_mode: null # choices: null, default, open. 
# default = Evaluate model for test_nepisode episodes and quit (no training)
# open =  perform open evaluation for test_episodes and quit (no training)
render: False # Render the environment when evaluating (only when evaluate == True)
load_step: best # last # Load model trained on this many timesteps (0 if choose max possible)
save_replay: False # Saving the replay of the model loaded from checkpoint_path
log_discounted_return: False # whether to log discounted return
local_results_path: 8v9/mappo # Relative path for local results

# --- RL hyperparameters ---
gamma: 0.99 
batch_size: 32 # Number of episodes to train on
buffer_size: 32 # Size of the replay buffer
lr: 0.0005 # Learning rate for agents
optim_alpha: 0.99 # RMSProp alpha
optim_eps: 0.00001 # RMSProp epsilon
grad_norm_clip: 10 # Reduce magnitude of gradients above this L2 norm
add_value_last_step: True

# --- Agent parameters ---
agent: "rnn" # Default rnn agent
use_rnn: True
hidden_dim: 64 # Size of hidden state for default rnn agent
obs_last_action: True # Include the agent's last action (one_hot) in the observation

# --- Experiment running params ---
repeat_id: 1
label: baseline
hypergroup: null